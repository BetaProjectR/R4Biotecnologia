My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
q+My_Theme
# args(mvrnorm)
# Simulated correlation between Age and ASPA methylation in humans
# adapted from https://doi.org/10.1016/j.fsigen.2015.05.007
# Generate a set of means and a symmetric covariance matrix
means   <- c(40, 70)
cov.mat <- matrix(c(90, -80, -80, 90), nrow = 2, ncol = 2)
age.aspa <- data.frame(mvrnorm(100, means, cov.mat))
# Give the data fram column headings
names(age.aspa) <- c("Age", 'ASPA')
age.aspa <- age.aspa %>% mutate(ASPA = ASPA/100)
age.aspa[1:10, ]
# Look at the mean and covariance to check the function
colMeans(age.aspa)
cov(age.aspa)
cor(age.aspa$Age, age.aspa$ASPA)
# Plot and export the joint distribution of the variables
p <- ggplot(age.aspa, aes(x = Age, y = ASPA))
p + geom_point() + geom_smooth(method = "lm") +
xlab("Age (year)") + ylab("ASPA Methylation (%)")
# Exporta datos simulados cor_wfe_color
# a) Guarda el directorio actual
old_wd <- getwd()
# b) Va al directorio Datos_simulados
setwd(paste0(getwd(),"/Datos_simulados"))
write.xlsx(age.aspa, file = "age.aspa.xlsx", sheetName = "age.aspa", append = FALSE)
# c) Vuele al directorio principal
setwd(old_wd)
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
q+My_Theme
reg <- lm(Age ~ ASPA, data = age.aspa)
predict.lm(reg,
newdata=data.frame(ASPA=c(2,3,4)),
interval="confidence")
reg <- lm(Age ~ ASPA, data = age.aspa)
predict.lm(reg,
newdata=data.frame(ASPA=c(1,1.2,1.3)),
interval="confidence")
r <- Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `NOAA - Adjusted sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")),
formula = formula1, parse = TRUE, size = 8)+scale_x_continuous(n.breaks = 8)
Sea_level <- read_excel("Sea_level.xlsx")
r <- Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `NOAA - Adjusted sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")),
formula = formula1, parse = TRUE, size = 8)+scale_x_continuous(n.breaks = 8)
r+My_Theme
Global_warming <- read_excel("Global_Warming.xlsx")
formula1 <- y ~ x
Global_warming$Year <- as.factor(Global_warming$Year)
Global_warming$CO2_ppm <- as.numeric(Global_warming$CO2_ppm)
Global_warming$`Global Temperature Anomalies` <- as.numeric(Global_warming$`Global Temperature Anomalies`)
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
s <- Global_warming %>% ggplot(aes(x = CO2_ppm, y = `Global Temperature Anomalies`)) +
geom_point() +
stat_smooth(method = "lm", col = "red", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+scale_x_continuous(n.breaks = 8)
s+My_Theme
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
q+My_Theme
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
q+My_Theme
Sea_level <- read_excel("Sea_level.xlsx")
r <- Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `NOAA - Adjusted sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+scale_x_continuous(n.breaks = 8)
r+My_Theme
knitr::include_graphics("Residuos.png")
reg <- lm(Age ~ ASPA, data = age.aspa)
anova(reg)
summary(reg$residuals)
summary(reg)$sigma
summary(reg)$r.squared
summary(reg)$adj.r.squared
predict.lm(reg,
newdata=data.frame(ASPA=c(1,1.2,1.3)),
interval="confidence")
plot(reg$residuals)
abline(h=0, col="red")
plot(Global_warming$CO2_ppm,Global_warming$`Global Temperature Anomalies`, xlab="CO2", ylab = "Anomalias en la temperatura global")
plot(reg, which=3)
qqPlot(reg) # library(car)
plot(reg, which=4)
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
# library(UsingR)
library(ggpmisc)
library(knitr)
library(car)
library(lmtest)
reg <- lm(Age ~ ASPA, data = age.aspa)
predict.lm(reg,
newdata=data.frame(ASPA=c(1,1.2,1.3)),
interval="confidence")
reg <- lm(Age ~ ASPA, data = age.aspa)
predict.lm(reg,
newdata=data.frame(ASPA=c(0.5, 1,0,1.5)),
interval="confidence")
reg <- lm(Age ~ ASPA, data = age.aspa)
predict.lm(reg,
newdata=data.frame(ASPA=c(0.5, 1,1.5)),
interval="confidence")
knitr::include_graphics("lm_t.png")
reg <- lm(Age ~ ASPA, data = age.aspa)
reg <- lm(Age ~ ASPA, data = age.aspa)
reg
reg <- lm(Age ~ ASPA, data = age.aspa)
summary(reg)
knitr::include_graphics("lm_t.png")
knitr::include_graphics("lm_t.png")
anova(reg)
summary(reg$residuals)
summary(reg)$sigma
summary(reg)$r.squared
summary(reg)$adj.r.squared
predict.lm(reg,
newdata=data.frame(ASPA=c(1,1.2,1.3)),
interval="confidence")
predict.lm(reg,
newdata=data.frame(ASPA=c(0,25,0,50,0,75)),
interval="confidence")
predict.lm(reg,
newdata=data.frame(ASPA=c(0.25,0.50,0.75)),
interval="confidence")
plot(age.aspa$ASPA,age.aspa$Age, xlab="Metilación gen ASPA", ylab = "Edad")
plot(reg, which=3)
qqPlot(reg) # library(car)
plot(reg, which=4)
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
q+My_Theme+ggtitle("Relación edad - metilación gen ASPA.")
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = Age , y = ASPA)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
q+My_Theme+ggtitle("Relación edad - % metilación gen ASPA.")
age.aspa <- read_excel("age.aspa.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
q <- age.aspa %>% ggplot(aes(x = ASPA, y = Age)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE) + scale_x_continuous(n.breaks = 8)
q+My_Theme+ggtitle("Relación edad - % metilación gen ASPA.")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
library(psych)
library(car)
library(lme4)
library(readxl)
library(xlsx)
library(faux)
install.packages("faux")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
library(psych)
library(car)
library(lme4)
library(readxl)
library(xlsx)
library(faux)
dat <- rnorm_multi(n = 100,
mu = c(0, 20, 20),
sd = c(1, 5, 5),
r = c(0.5, 0.5, 0.25),
varnames = c("A", "B", "C"),
empirical = FALSE)
View(dat)
dat <- rnorm_multi(n = 100,
mu = c(0, 1, 1),
sd = c(1, 1, 1),
r = c(0.8, 0.8, 0.20),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(0.8, 0.8, 0.20),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(1, 0.8, 0.20),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(1, 1, 0.20),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(1, 1, 6),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(1, 1, 0.6),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(1, 1, 0.8),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(0.8, 0.6, 0.2),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(0.8, 0.6, 0.2),
varnames = c("A", "B", "C"),
empirical = FALSE)
# Exporta datos simulados cor_wfe_color
# a) Guarda el directorio actual
old_wd <- getwd()
# b) Va al directorio Datos_simulados
setwd(paste0(getwd(),"/Datos_simulados"))
write.xlsx(dat, file = "dat_cor.xlsx", sheetName = "cor", append = FALSE)
# c) Vuele al directorio principal
setwd(old_wd)
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
a+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
b+My_Theme
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
a+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop("..rr.label..")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
a+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(",..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
b+My_Theme
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "right") + scale_x_continuous(n.breaks = 8)
a+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(",..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)
b+My_Theme
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)
a+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(",..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)
b+My_Theme
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
# library(UsingR)
library(ggpmisc)
library(knitr)
library(car)
library(lmtest)
library(gridExtra)
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(",..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)+ My_Theme
grid.arrange(a, b, ncol=2, nrow =1)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(0.9, 0.6, 0.2),
varnames = c("A", "B", "C"),
empirical = FALSE)
# Exporta datos simulados cor_wfe_color
# a) Guarda el directorio actual
old_wd <- getwd()
# b) Va al directorio Datos_simulados
setwd(paste0(getwd(),"/Datos_simulados"))
write.xlsx(dat, file = "dat_cor.xlsx", sheetName = "cor", append = FALSE)
# c) Vuele al directorio principal
setwd(old_wd)
dat <- rnorm_multi(n = 100,
mu = c(0, 0, 0),
sd = c(1, 1, 1),
r = c(0.9, 0.5, 0.2),
varnames = c("A", "B", "C"),
empirical = FALSE)
# Exporta datos simulados cor_wfe_color
# a) Guarda el directorio actual
old_wd <- getwd()
# b) Va al directorio Datos_simulados
setwd(paste0(getwd(),"/Datos_simulados"))
write.xlsx(dat, file = "dat_cor.xlsx", sheetName = "cor", append = FALSE)
# c) Vuele al directorio principal
setwd(old_wd)
dat <- read_excel("dat_cor.xlsx")
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
a <- dat %>% ggplot(aes(x = A, y = B)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(", ..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)+My_Theme
b <- dat %>% ggplot(aes(x = A, y = C)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", show.legend=TRUE)+  stat_poly_eq(aes(label = paste0("atop(",..rr.label..,")")), formula = formula1, parse = TRUE, size = 8, label.x.npc = "left") + scale_x_continuous(n.breaks = 8)+ My_Theme
grid.arrange(a, b, ncol=2, nrow =1)
setwd("~/Dropbox/CURSOS/POSTGRADO/DBT_845_INVESTIGACION_REPRODUCIBLE/2022/R4Biotecnologia_v2022/Clase_13")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
# library(UsingR)
library(ggpmisc)
library(knitr)
library(car)
library(lmtest)
library(gridExtra)
Sea_level <- read_excel("Sea_level.xlsx")
r <- Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `Sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+scale_x_continuous(n.breaks = 8)
r+My_Theme+ggtitle("Relación aumento del nivel del mar y consumo de helados en Chile.")
Sea_level <- read_excel("Sea_level.xlsx")
r <- Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `Sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+scale_x_continuous(n.breaks = 8)
r + My_Theme + ggtitle("Relación aumento del nivel del mar y consumo de helados en Chile.")
Sea_level %>%
filter(Year > 1992) %>% ggplot(aes(x = `Consumo de helados Chile (Litros)`, y = `Sea level (cm)`)) +
geom_point(colour="black") +
stat_smooth(method = "lm", col = "black", show.legend=TRUE)+scale_x_continuous(n.breaks = 8)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(dplyr)
library(multcomp)
snp.data <- read_excel("myostatin.snp.data.xlsx")
snp.data$Sex <- as.factor(snp.data$Sex)
summary(snp.data)
table(snp.data$Sex, snp.data$Geno)
tapply(snp.data$weight, factor(snp.data$Geno), mean)
table(snp.data$Sex, snp.data$Geno)
tapply(snp.data$`mass-to-height ratio`, factor(snp.data$Geno), mean)
tapply(snp.data$weight, factor(snp.data$Sex), mean)
table(snp.data$Sex, snp.data$Geno)
tapply(snp.data$`mass-to-height ratio`, factor(snp.data$Geno), mean)
tapply(snp.data$`mass-to-height ratio`, factor(snp.data$Sex), mean)
ggplot(snp.data, aes(x=mass-to-height ratio))+
ggplot(snp.data, aes(x=`mass-to-height ratio`))+
geom_histogram(color="darkblue", fill="lightblue", bins = 12)
p <- ggplot(snp.data, aes(x = Geno, y = `mass-to-height ratio`))
p + geom_point() + xlab("Reference allele count") + geom_smooth(method=lm)
lm.geno <- lm(`mass-to-height ratio` ~ Geno, data = snp.data)
summary(lm.geno)
predict.lm(lm.geno, newdata=data.frame(Geno=c(0,1,2)), interval="confidence")
predict.lm(lm.geno, newdata=data.frame(Geno=c(0,1,2)), interval="prediction")
# anova suponiendo varianzas iguales
anova(lm.geno)
# anova suponiendo varianzas diferentes
oneway.test(`mass-to-height ratio` ~ Geno, data = snp.data)
lm.geno2 <- lm(`mass-to-height ratio` ~ -1 + factor(Geno), data = snp.data)
summary(lm.geno2)
summary(lm.geno)
# Elabora matriz de contrastes para el factor Geno
contrastes = contrMat(table(snp.data$Geno), type="Tukey")
# Realiza comparaciones multiples
mc2 = glht(lm.geno2, linfct =contrastes)
summary(mc2, test=adjusted("bonferroni"))
q <- ggplot(snp.data, aes(x = Geno, y = `mass-to-height ratio`, shape=Sex, color=Sex))
q + geom_point() + xlab("Reference allele count") + geom_smooth(method=lm)
lm.geno.sex <- lm(`mass-to-height ratio` ~ Geno + Sex, data = snp.data)
summary(lm.geno.sex)
plot.design(snp.data$`mass-to-height ratio` ~ factor(snp.data$Geno) + factor(snp.data$Sex))
interaction.plot(factor(snp.data$Geno), factor(snp.data$Sex), snp.data$`mass-to-height ratio`, mean)
lm.qtl <- lm(w`mass-to-height ratio` ~ factor(Geno) * factor(Sex), data = snp.data)
lm.qtl <- lm(`mass-to-height ratio` ~ factor(Geno) * factor(Sex), data = snp.data)
summary(lm.qtl)
shapiro.test (residuals (lm.qtl))
plot(lm.qtl, which = 2)
plot(lm.qtl, which = 1)
snp.data <- read_excel("myostatin.deletion.data.xlsx")
snp.data$Sex <- as.factor(snp.data$Sex)
summary(snp.data)
