source('~/Dropbox/CURSOS/POSTGRADO/DBT_845_INVESTIGACION_REPRODUCIBLE/2022/Clase_01/Clase_01-script.R')
source('~/Dropbox/CURSOS/POSTGRADO/DBT_845_INVESTIGACION_REPRODUCIBLE/2022/Clase_01/Clase_01-script.R')
source('~/Dropbox/CURSOS/POSTGRADO/DBT_845_INVESTIGACION_REPRODUCIBLE/2022/Clase_01/Clase_01-script.R')
Profesores$Nombres[-3] # excluye datos
Profesores$Nombres[-1] # excluye datos
Profesores[c(1:2),"Albinismo"]
View(Profesores)
Sexo <- c(1,2) # Codificamos 1= varón ; 2= mujer
Estatura <- c(1.73,1.63) # Punto indica decimales.
Albinisno <- c(0,0) # # Codificamos 0= No ; 1= Si
Genotipo <- c("TT","Tt")
Profesores <- data.frame(Nombre,Sexo,Estatura,Albinismo,Genotipo)
# Explorar un objeto con [] y con $
Profesores[1,1]
Profesores[1,]
Profesores[2,4] # da NULL
Profesores[c(1:2),"Albinismo"]
Profesores$Nombres
Profesores$Nombres[-1] # excluye datos
View(Profesores)
Profesores <- data.frame(Nombres,Sexo,Estatura,Albinismo,Genotipo)
Sexo <- c(1,2) # Codificamos 1= varón ; 2= mujer
Estatura <- c(1.73,1.63) # Punto indica decimales.
Albinismo <- c(0,0) # # Codificamos 0= No ; 1= Si
Genotipo <- c("TT","Tt")
Profesores <- data.frame(Nombres,Sexo,Estatura,Albinismo,Genotipo)
# Explorar un objeto con [] y con $
Profesores[1,1]
Profesores[1,]
Profesores[2,4] # da NULL
Profesores[c(1:2),"Albinismo"]
Profesores[2,5] # da NULL
Profesores[2,6] # da NULL
Profesores[c(1:2),"Albinismo"]
Profesores$Nombres
Profesores$Nombres[-1] # excluye datos
# Listar objetos
ls()
# Trabajando con matrices.
# Simularemos abundancia de bacterias de 3 especies en diferentes superficies de un lab.
abundancia=c(1:24)
dim(abundancia)
M  = matrix(abundancia, ncol=3)
M
class(M)
dim(M) # dimensiones de una matriz
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4 # greater than or equal to
M!=12 # not equal to
names()
names(M)
rownames(M) <- c("Coli", "Salmonella", "Streptococcus")
colnames(M) <- c("Coli", "Salmonella", "Streptococcus")
names(M)
M
M
# Trabajando con matrices.
# Simularemos y exploraremos abundancia de bacterias de 3 especies en diferentes superficies de un lab.
abundancia=c(1:21)
dim(abundancia)
M  = matrix(abundancia, ncol=3)
M
class(M)
paste("day",c(seq(1:7)))
rownames(M) <- paste("day",c(seq(1:7)))
M
M[3,]
M[,c(1,2)]
M[,c("Coli", "Salmonella")]
M[,"Coli", "Salmonella"]
View(M)
colnames(M) <- c("Coli", "Salmonella", "Streptococcus")
M
rownames(M) <- paste("day",c(seq(1:7)))
M
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4 # greater than or equal to
M!=12 # not equal to
# Trabajando con listas
proyecto <- list(Profesores, M)
proyecto
# agregar nombres a una lista
proyecto <- list(Datos=meiofauna, Abundancia=M)
# agregar nombres a una lista
proyecto <- list(Datos=Profesores, Abundancia=M)
proyecto
# agregar nombres a una lista
proyecto <- list(Datos=Profesores, Bacterias=M)
# agregar nombres a una lista
proyecto <- list(Datos=Profesores, Bacterias=M)
proyecto
str(proyecto)
# Acceso a componentes de una lista
proyecto$Datos
proyecto$Bacterias
proyecto[[2]]
proyecto[["Nombre proyecto"]] = c("Simulación")
proyecto
proyecto[[3]]
proyecto[[2]]
# Remover objetos de la sesión de trabajo
rm(list = ls())
# Librerías, gráficas y funciones
help("datasets")
help(BOD)
summary(BOD)
hist(BOD$demand, main = "Demanda bioquimica de oxígeno", col = "red")
plot(BOD$Time, BOD$demand)
cor(BOD$Time, BOD$demand)
# Trabajando con matrices.
# Simularemos y exploraremos abundancia de bacterias de 3 especies
# y como varian en el tiempo.
abundancia=c(1:21)
dim(abundancia)
M  = matrix(abundancia, ncol=3)
M
class(M)
dim(M) # dimensiones de una matriz
colnames(M) <- c("Coli", "Salmonella", "Streptococcus")
M
rownames(M) <- paste("day",c(seq(1:7)))
M
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4 # greater than or equal to
M!=12 # not equal to
# Trabajando con listas
proyecto <- list(Profesores, M)
proyecto
# agregar nombres a una lista
proyecto <- list(Datos=Profesores, Bacterias=M)
proyecto
str(proyecto)
# Acceso a componentes de una lista
proyecto$Datos
proyecto$Bacterias
proyecto[[2]]
# Remover objetos de la sesión de trabajo
rm(list = ls())
# Librerías, gráficas y funciones
help("datasets")
help(BOD)
summary(BOD)
hist(BOD$demand, main = "Demanda bioquimica de oxígeno", col = "red")
plot(BOD$Time, BOD$demand)
cor(BOD$Time, BOD$demand)
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("R_script.png")
knitr::include_graphics("ObjetosR.png")
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
library(psych)
library("knitr")
library(Rlab)
knitr::include_graphics("TiposVariables.jpg")
knitr::include_graphics("TiposVariables.png")
knitr::include_graphics("Binomial_salm.png")
rownames(M) <- paste0("day",c(seq(1:7)))
# Trabajando con matrices.
# Simularemos y exploraremos abundancia de bacterias de 3 especies
# y como varian en el tiempo.
abundancia=c(1:21)
dim(abundancia)
M  = matrix(abundancia, ncol=3)
M
class(M)
dim(M) # dimensiones de una matriz
colnames(M) <- c("Coli", "Salmonella", "Streptococcus")
M
rownames(M) <- paste0("day",c(seq(1:7)))
M
rownames(M) <- paste("day",c(seq(1:7)))
M
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(stats)
library(graphics)
library(pander)
library(MASS)
library(Rlab)
p <- 2 / 240
p
p <- 2 / 240
paste("La proporción de productos defectuosos es =", p*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es =", raound(p,2)*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es =", round(p,2)*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es =", round(p,3)*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es =", round(p,4)*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es =", round(p,4)*100, "%")
p <- 2 / 240
paste0("La proporción de productos defectuosos es =", round(p,4)*100, "%")
p <- 2 / 240
paste("La proporción de productos defectuosos es = ", round(p,4)*100, "%")
q <- 1-p
paste("La proporción de productos defectuosos es = ", round(q,4)*100, "%")
q <- 1-p
paste("La proporción de productos no defectuosos es = ", round(q,4)*100, "%")
# P(Y=0)
P_ND <- q*q*q
paste("La proporción de productos defectuosos es = ", round(q*q*q,4)*100, "%")
# P(Y=0)
P_ND <- q*q*q
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(q*q*q,4)*100, "%")
# P(Y=0)
P_ND <- q*q*q
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_ND,4)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,4)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,8)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,7)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,6)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,5)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,4)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_PD,6)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que todos los productos de la muestra sean defectuosos es = ", round(P_PD,6)*100, "%")
knitr::include_graphics("Eje1.png")
detach("package:MASS", unload = TRUE)
boxplot(dat$Weight ~ dat$sex, col="light blue", main = "Boxplot Weight", ylab = "Weight (g)")
dat <- read_excel("Data.xlsx", sheet = 1)
head(dat)
tail(dat)
str(dat)
summary(dat)
dat$sex <- as.factor(dat$sex)
summary(dat)
str(dat)
par(mfrow=c(1,2))
hist(dat$Weight, col="light blue", main = "Histograma Weight", xlab = "Weight (g)")
boxplot(dat$Weight, col="light blue", main = "Boxplot Weight", ylab = "Weight (g)")
boxplot(dat$Weight ~ dat$sex, col="light blue", main = "Boxplot Weight", ylab = "Weight (g)")
boxplot(dat$Weight ~ dat$sex, col="light blue", main = "Boxplot Weight", ylab = "Weight (g)", xlab = "Sex")
boxplot(dat$Weight ~ dat$sex, col="light blue", main = "Weight by sex", ylab = "Weight (g)", xlab = "Sex")
boxplot(dat$Weight ~ dat$sex, col="light blue", main = "Weight: male v/s female", ylab = "Weight (g)", xlab = "Sex")
mouse$sex <- as.factor(mouse$sex)
mouse <- read_excel("Data.xlsx", sheet = 1)
head(mouse)
tail(mouse)
str(mouse)
summary(mouse)
mouse$sex <- as.factor(mouse$sex)
summary(mouse)
str(mouse)
par(mfrow=c(1,2))
hist(mouse$Weight, col="light blue", main = "Histograma Weight", xlab = "Weight (g)")
boxplot(mouse$Weight, col="light blue", main = "Boxplot Weight", ylab = "Weight (g)")
mean(mouse$Weight)
sd(mouse$Weight)
range(mouse$Weight)
quantile(mouse$Weight)
# Densidad empírica.
plot(density(mouse$Weight), main="Densidad empírica", xlab="Weight (g)")
# Distribución acumulada empírica.
plot(ecdf(mouse$Weight), main="Distribución acumulada empírica", xlab="Weight (g)")
Fn <- ecdf(mouse$Weight)
Fn
# Fn(x) returns the percentiles for x
paste("La proporción de animales menores a 20 g es = ", Fn(20)*100, "%")
# 1- Fn(x) returns 1 - the percentiles for x
paste("La proporción de animales mayores a 30 g es = ", ((1 - Fn(30))*100), "%")
plot(density(mouse$Weight), main="Densidad empírica", xlab="Weight (g)")
abline(v=19.958 + 4.710923, col="red", lwd=2)
abline(v=19.958 - 4.710923, col="red", lwd=2)
abline(v=19.958, col="blue", lwd=2)
p1 <- 1 - Fn(19.958 + 4.710923)
p1
p2 <- Fn(19.958 - 4.710923)
p2
paste(((1 - (p1 + p2))*100),"%")
# Este valor es muy cercano al 68% teórico de una variable con distribución normal.
boxplot(mouse$Weight ~ mouse$sex, col="light blue", main = "Weight: male v/s female", ylab = "Weight (g)", xlab = "Sex")
# Variable cuantitativa discreta con distribución Binomial
p <- 2 / 240
paste("La proporción de productos defectuosos es = ", round(p,4)*100, "%")
q <- 1-p
paste("La proporción de productos no defectuosos es = ", round(q,4)*100, "%")
knitr::include_graphics("Eje1.png")
# P(Y=0)
P_ND <- q*q*q
paste("La probabilidad de que no encuentren productos defectuosos es = ", round(P_ND,4)*100, "%")
# P(Y=3)
P_PD <- p*p*p
paste("La probabilidad de que todos los productos de la muestra sean defectuosos es = ", round(P_PD,6)*100, "%")
LT_VPM <- 30 / 486
LT_VPM
# "Variable Discreta"
# "Distribución Bernoulli"
set.seed(123)
n <- 80
p <- 0.0617
q <- 1-p
rvpm<-rbinom(n, size=1, prob=0.0617)
print(rvpm)
table(rvpm)
hist(rvpm, col="red", main = "Histograma Intoxicación por VPM")
n*p
n*p*q
dvpm<-dbinom(rvpm, size=1, prob=0.0617)
plot(x=rvpm, y=dvpm, main="Densidad de rvpm", col="blue4")
pvpm<-pbinom(rvpm, size=1, prob=0.0617)
plot(x=rvpm, y=pvpm, main="Prob. acumul. rvpm", col="red", ylim=c(0,1))
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(stats)
library(graphics)
library(Rlab)
mean(mouse$Weight)
sd(mouse$Weight)
range(mouse$Weight)
quantile(mouse$Weight)
qqline(mouse$Weight)
