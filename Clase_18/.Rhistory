# Realice pruebas de normalidad con el método gráfico y con el test de Shapiro.
qqnorm(bioenv$Depth)
qqline(bioenv$Depth)
qqnorm(bioenv$Pollution)
qqline(bioenv$Pollution)
qqnorm(bioenv$Temperature)
qqline(bioenv$Temperature)
shapiro.test(bioenv$Depth)
shapiro.test(bioenv$Pollution)
shapiro.test(bioenv$Temperature)
# **Ejercicio 2.** Análisis de Componentes Principales
# Elabore un nuevo set de datos llamado **bioenv_new** solo con las variables Depth, Pollution y Temperature.
# utilice la columna Sitio para agregar el nombre de las filas.
bioenv_new <- as.data.frame(bioenv[,7:9])
row.names(bioenv_new) <- bioenv$Sitio
head(bioenv_new)
# Realice un análisis de componentes principales para el nuevo set de datos **bioenv_new**
# con la función **prcomp**, use el argumento *scale = TRUE* para estandarizar las variables de forma automática.
bioenvpca <- prcomp(bioenv_new, scale = TRUE)
bioenvpca
# Obtenga la varianza explicada por cada CP con la función **get_eigenvalue**
# y grafique con la función **fviz_eig**.
get_eigenvalue(bioenvpca)
fviz_eig(bioenvpca)
# Elabore gráficas para representar la distribución de los sitios **fviz_pca_ind()**,
# de las variables **fviz_pca_var()** y gráficas Biplot **fviz_pca_biplot()**
fviz_pca_ind(bioenvpca, repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(bioenvpca)
fviz_pca_biplot(bioenvpca, repel = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readxl)
library(dplyr)
library(psych)
library(factoextra)
library(ggplot2)
library(MVN)
metadata <- read_excel("VB_PCA_subaset.xlsx", sheet = 1)
metadata <- read_excel("VB_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("VB_PCA_subset.xlsx", sheet = 2)
summary(metadata)
summary(meicrobiota)
summary(metadata)
summary(microbiota)
metadata <- read_excel("VB_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("VB_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
metadata <- read_excel("VB_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("VB_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
View(metadata)
table(metadata$BV_state, metadata$`Metronidazole reaction`)
metadata <- read_excel("VB_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("VB_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$BV_state, metadata$`Metronidazole reaction`)
metadata <- read_excel("VB_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("VB_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$BV_state, metadata$`Metronidazole reaction`)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$BV_state, metadata$Metronidazole_reaction)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$BV_state, metadata$Metronidazole_reaction)
table(metadata$Metronidazole_reaction)
View(microbiota)
View(metadata)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
View(microbiota)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
View(microbiota)
pairs.panels(microbiota[46:56])
pairs.panels(microbiota[46:50])
pairs.panels(microbiota[51:56])
pairs.panels(microbiota[46:50], method="spearman")
pairs.panels(microbiota[51:56], method="spearman")
View(microbiota)
cor(tmicrobiota[33:37], method = "spearman")
cor(microbiota[33:37], method = "spearman")
cor(microbiota[34:37], method = "spearman")
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readxl)
library(dplyr)
library(psych)
library(factoextra)
library(ggplot2)
library(vegan)
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
Bray_curtis
View(metadata)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
summary(metadata)
summary(microbiota)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
pairs.panels(microbiota[46:50], method="spearman")
pairs.panels(microbiota[51:56], method="spearman")
cor(microbiota[34:37], method = "spearman")
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
Bray_curtis
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis
View(microbiota)
microbiota_new <- microbiota[2:104]
microbiota_new <- microbiota[2:104]
row.names(microbiota_new) <- microbiota$sample
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
microbiota_PCA
View(microbiota_new)
microbiota_new <- t(microbiota[2:104])
col.names(microbiota_new) <- microbiota$sample
microbiota_new <- t(microbiota[2:104])
colnames(microbiota_new) <- microbiota$sample
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
microbiota_PCA
View(microbiota_new)
View(microbiota)
View(microbiota_new)
View(microbiota_PCA)
View(microbiota_new)
get_eigenvalue(microbiota_PCA)
fviz_eig(microbiota_PCA)
fviz_pca_ind(microbiota_PCA, repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(microbiota_PCA)
fviz_pca_biplot(microbiota_PCA, repel = TRUE)
microbiota_new <- (microbiota[2:104])
rownames(microbiota_new) <- microbiota$sample
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
microbiota_PCA
get_eigenvalue(microbiota_PCA)
fviz_eig(microbiota_PCA)
fviz_pca_ind(microbiota_PCA, repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(microbiota_PCA)
fviz_pca_biplot(microbiota_PCA, repel = TRUE)
fviz_pca_biplot(microbiota_PCA, repel = TRUE)
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = FALSE, # Concentration ellipses
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(microbiota_PCA, select.var = list(cos2 = 0.96))
fviz_pca_var(microbiota_PCA, select.var = list(cos2 = 0.70))
fviz_pca_var(microbiota_PCA, select.var = list(cos2 = 0.60))
fviz_pca_var(microbiota_PCA, select.var = list(cos2 = 0.20))
fviz_pca_var(microbiota_PCA, select.var = list(cos2 = 0.30))
fviz_pca_var(microbiota_PCA, select.var = list(contrib = 3)))
fviz_pca_var(microbiota_PCA, select.var = list(contrib = 3))
fviz_pca_var(microbiota_PCA, select.var = list(contrib = 10))
fviz_pca_var(microbiota_PCA, list(name = c("Lactobacillus iners", "Lactobacillus crispatus"))
fviz_pca_var(microbiota_PCA, list(name = c("Lactobacillus iners", "Lactobacillus crispatus")))
fviz_pca_var(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus")))
fviz_pca_var(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis")))
fviz_pca_var(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")))
fviz_pca_biplot(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae", repel = TRUE)
fviz_pca_biplot(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")), repel = TRUE)
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipsesrepel = TRUE)
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipsesrepel = TRUE)
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = FALSE, # Concentration ellipsesrepel = TRUE)
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = FALSE, # Concentration ellipsesrepel = TRUE)
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipsesrepel = TRUE)
ellipse.level=0.95,
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipsesrepel = TRUE)
ellipse.level=0.70,
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipsesrepel = TRUE)
ellipse.level=0.60,
repel = TRUE) # evita que se solape el nombre de los sitios
microbiota_new <- t(microbiota[2:104])
rownames(microbiota_new) <- microbiota$sample
microbiota_new <- t(microbiota[2:104])
colnames(microbiota_new) <- microbiota$sample
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
microbiota_PCA
get_eigenvalue(microbiota_PCA)
fviz_eig(microbiota_PCA)
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")))
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipse
ellipse.level=0.60,
repel = TRUE) # evita que se solape el nombre de los sitios
View(microbiota_PCA)
microbiota_PCA[["center"]]
microbiota_PCA[["scale"]]
microbiota_PCA[["x"]]
View(microbiota_new)
microbiota_new <- microbiota[2:104]
rownames(microbiota_new) <- microbiota$sample
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
microbiota_PCA
get_eigenvalue(microbiota_PCA)
fviz_eig(microbiota_PCA)
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_var(microbiota_PCA, select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")))
fviz_pca_biplot(microbiota_PCA,
select.var=list(name = c("Lactobacillus iners","Lactobacillus crispatus", "Gardnerella vaginalis", "Atopobium vaginae")),
label ="var",
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipse
ellipse.level=0.60,
repel = TRUE) # evita que se solape el nombre de los sitios
# title: "Ejemplo Análisis de Componentes Principales"
# subtitle: 'Diplomado R Acuicultura'
# author: Dr. José Gallardo Matus.
#  affiliation: Profesor adjunto de la Pontificia Universidad Católica de Valparaíso
#  email: <jose.gallardo@pucv.cl
# Objetivos de aprendizaje
# Elaborar un análisis de componentes principales con un set de datos simulado usando el software R.
# Paquetes
library(readxl)
library(dplyr)
library(psych) # Procedures for Psychological, Psychometric, and Personality Research
library(factoextra) # Extract and Visualize the Results of Multivariate Data Analyses.
library(ggplot2)
# Realizar ACP a partir del set de datos **bioenv.xlsx** disponibles en el libro MULTIVARIATE ANALYSIS OF ECOLOGICAL DATA
# de los autores [Michael Greenacre and Raul Primicerio](https://www.fbbva.es/microsite/multivariate-statistics/).
# **Ejercicio 1.** Importar y explorar
bioenv <- read_excel("bioenv.xlsx", sheet = 1)
summary(bioenv)
bioenv$Sitio <- as.factor(bioenv$Sitio)
bioenv$Sediment <- as.factor(bioenv$Sediment)
str(bioenv)
# Elabore una gráfica de correlaciones de las variables Depth, Pollution y Temperature
# usando la función **pairs.panels()**.
pairs.panels(bioenv[7:9])
cor(microbiota[7:9], method = "pearson")
# **Ejercicio 2.** Análisis de Componentes Principales
# Elabore un nuevo set de datos llamado **bioenv_new** solo con las variables Depth, Pollution y Temperature.
# utilice la columna Sitio para agregar el nombre de las filas.
bioenv_new <- as.data.frame(bioenv[,7:9])
row.names(bioenv_new) <- bioenv$Sitio
head(bioenv_new)
# Realice un análisis de componentes principales para el nuevo set de datos **bioenv_new**
# con la función **prcomp**, use el argumento *scale = TRUE* para estandarizar las variables de forma automática.
bioenvpca <- prcomp(bioenv_new, scale = TRUE)
bioenvpca
# Obtenga la varianza explicada por cada CP con la función **get_eigenvalue**
# y grafique con la función **fviz_eig**.
get_eigenvalue(bioenvpca)
fviz_eig(bioenvpca)
fviz_pca_ind(bioenvpca, repel = TRUE) # evita que se solape el nombre de los sitios
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none") # hide individual labels) # evita que se solape el nombre de los sitios
View(bioenv)
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none",
habillage = bioenv$Sediment) # Identifica individuos por factor de clasificación
View(bioenv)
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none",
habillage = bioenv$Sediment,
addEllipses = TRUE) # Concentration ellipses
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none",
habillage = bioenv$Sediment,
addEllipses = TRUE,
ellipse.level=0.60)  # ajusta tamaño de elipses
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none",
habillage = bioenv$Sediment,
addEllipses = TRUE,
ellipse.level=0.60,
select.ind = list(cos2 = 10)) # selecciona individuos que mas contrbuyen al PCA
fviz_pca_ind(bioenvpca, repel = TRUE,
label = "none",
habillage = bioenv$Sediment,
addEllipses = TRUE,
ellipse.level=0.60,
select.ind = list(cos2 = 15)) # selecciona individuos que mas contrbuyen al PCA
fviz_pca_var(bioenvpca)
fviz_pca_var(bioenvpca, select.var=list(name = c("Pollution","Depth")))
select.var=list(name = c("Pollution","Depth"))
fviz_pca_biplot(bioenvpca,
repel = TRUE,
label = "none",
habillage = bioenv$Sediment,
addEllipses = TRUE,
ellipse.level=0.60,
select.ind = list(cos2 = 15),
select.var=list(name = c("Pollution","Depth")))
fviz_pca_biplot(bioenvpca,
repel = TRUE,
label = "var",
habillage = bioenv$Sediment,
addEllipses = TRUE,
ellipse.level=0.60,
select.ind = list(cos2 = 15),
select.var=list(name = c("Pollution","Depth")))
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readxl)
library(dplyr)
library(psych)
library(factoextra)
library(ggplot2)
library(vegan)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
metadata$sample <- as.factor(metadata$sample)
metadata$BV_state <- as.factor(metadata$BV_state)
metadata$Metronidazole_reaction <- as.factor(metadata$Metronidazole_reaction)
microbiota$sample <- as.factor(microbiota$sample)
head(metadata)
head(microbiota)
table(metadata$Metronidazole_reaction)
table(metadata$BV_state)
summary(metadata)
str(microbiota)
knitr::opts_chunk$set(echo = FALSE)
library(stats)
library(readxl)
library(dplyr)
library(psych)
library(factoextra)
library(ggplot2)
library(vegan)
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1:6]
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1:6,1:6]
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1:6;1:6]
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1:6-1:6]
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1,6:6,6]
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
Bray_curtis[1:6, ncol = 5]
class(Bray_curtis)
Bray_curtis <- vegdist(microbiota[2:104], method="bray", binary=FALSE, diag=TRUE, upper=FALSE, na.rm = FALSE)
M <- as.matrix(Bray_curtis[1:6, ncol = 5])
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
View(metadata)
metadata <- read_excel("BV_PCA_subset.xlsx", sheet = 1)
microbiota <- read_excel("BV_PCA_subset.xlsx", sheet = 2)
# Ttransforma datos a formato adecuado para PCA
microbiota_new <- microbiota[2:104]
rownames(microbiota_new) <- microbiota$sample
# PERMANOVA
permanova_3 <- adonis(microbiota_new ~ BV_state, method = "bray", data=metadata, permutations=1000)
permanova_3
library(readxl)
library(dplyr)
library(ggplot2)
library(vegan) # 	Community Ecology Package: Ordination, Diversity and Dissimilarities
library(factoextra)
# PERMANOVA
permanova_3 <- adonis(microbiota_new ~ BV_state, method = "bray", data=metadata, permutations=1000)
permanova_3
permanova_2 <- adonis(bioenv_new ~ Sediment, method = "bray", data=bioenv, permutations=1000)
permanova_2
View(permanova_3)
permanova_3[["aov.tab"]]
#PCA
microbiota_PCA <- prcomp(microbiota_new, scale = TRUE)
# Gráfica PCA
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
repel = TRUE) # evita que se solape el nombre de los sitios
# Gráfica PCA
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.level=0.80,
repel = TRUE) # evita que se solape el nombre de los sitios
# Gráfica PCA
fviz_pca_ind(microbiota_PCA,
label = "none", # hide individual labels
habillage = metadata$BV_state, # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.level=0.70,
repel = TRUE) # evita que se solape el nombre de los sitios
View(metadata)
View(permanova_2)
View(microbiota_new)
