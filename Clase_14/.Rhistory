knitr::opts_chunk$set(echo = FALSE)
library(car)
library(lmtest)
library(psych)
library(readxl)
library(nlme)
library(lme4)
library(stats)
library(boot)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggpmisc)
library(knitr)
library(car)
library(lmtest)
library(psych)
library(gridExtra)
library(nortest)
# library(sjPlot)
library(lme4)
library(reshape2)
q <- ggplot(data = maduracion, aes(x = Genotype, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_smooth(method = "lm", color = "gray20", se = FALSE) +
stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+
theme_bw()  +
labs(x="Peso de gónada",y = "Probabilidad de Maduración") +
scale_y_continuous(limits = c(0, 1)) +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
maduracion <- read_excel("Maturation.xlsx")
maduracion$Genotype <- as.factor(maduracion$Genotype)
maduracion <- maduracion%>%
select("Fish","Genotype","Gonad","GSI","Maturation")
mod_lineal <- lm(Maturation ~ Gonad, data = maduracion)
mod_logit <- glm(Maturation ~ Gonad,
family= binomial, data = maduracion)
formula1 <- y ~ x
My_Theme = theme(
axis.title.x = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.y = element_text(size = 20))
p<- ggplot(data = maduracion, aes(x = Gonad, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
theme_bw()  +
labs(x= "Peso de gónada", y = "Maduración")+
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
p+My_Theme
q <- ggplot(data = maduracion, aes(x = Genotype, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_smooth(method = "lm", color = "gray20", se = FALSE) +
stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+
theme_bw()  +
labs(x="Peso de gónada",y = "Probabilidad de Maduración") +
scale_y_continuous(limits = c(0, 1)) +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
q+My_Theme
q <- ggplot(data = maduracion, aes(x = Genotype, y = Maturation)) +
geom_boxplot(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_smooth(method = "lm", color = "gray20", se = FALSE) +
stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+
theme_bw()  +
labs(x="Peso de gónada",y = "Probabilidad de Maduración") +
scale_y_continuous(limits = c(0, 1)) +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
q+My_Theme
q <- ggplot(data = maduracion, aes(x = Genotype, y = Maturation)) +
geom_boxplot() +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_smooth(method = "lm", color = "gray20", se = FALSE) +
stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+
theme_bw()  +
labs(x="Peso de gónada",y = "Probabilidad de Maduración") +
scale_y_continuous(limits = c(0, 1)) +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
q+My_Theme
q <- ggplot(data = maduracion, aes(x = Gonad, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_smooth(method = "lm", color = "gray20", se = FALSE) +
stat_poly_eq(aes(label = paste0("atop(", ..eq.label.., ",", ..rr.label.., ")")), formula = formula1, parse = TRUE, size = 8)+
theme_bw()  +
labs(x="Peso de gónada",y = "Probabilidad de Maduración") +
scale_y_continuous(limits = c(0, 1)) +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
q+My_Theme
# Representación gráfica del modelo.
r <- ggplot(data = maduracion, aes(x = Gonad, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
stat_function(fun = function(x){predict(mod_logit,
newdata = data.frame(Gonad = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística", x="Peso de gónada",
y = "Probabilidad de Maduración") +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
r+My_Theme
# Representación gráfica del modelo.
s <- ggplot(data = maduracion, aes(x = Gonad, y = Maturation)) +
geom_point(aes(color = as.factor(Maturation)), shape = 1) +
theme(axis.text.x = element_text(size = 10,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 10,face="bold",colour="black"))+
geom_hline(aes(yintercept=0.50), color="red")+
stat_function(fun = function(x){predict(mod_logit,
newdata = data.frame(Gonad = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística", x="Peso de gónada",
y = "Probabilidad de Maduración") +
theme(legend.position = "none")+
theme(panel.border=element_blank(), axis.line=element_line())
s+My_Theme
# Predicción con modelo lineal
maduracion$madurar_lm <- predict(mod_lineal,maduracion,type="response")
#Determinamos  que el salmón madura cuando haya una probabilidad de maduración superior al 50%
maduracion$predic <- ifelse(maduracion$madurar_lm > 0.5,1,0)
#Enfrentamos la predicción contra la realidad
table(maduracion$predic,maduracion$Maturation)
#Predecimos si un salmón madura o no para un peso de gónada de 4
Prob.mad_lm <- data.frame(Gonad=4)
Prediccion_lm <- predict(mod_lineal, Prob.mad_lm, type = "response")
Prediccion_lm <- data.frame(Prediccion_lm)
colnames(Prediccion_lm) <- c("Probabilidad de maduración")
maduracion$madurar <- predict(mod_logit,maduracion,type="response")
maduracion$predic <- ifelse(maduracion$madurar > 0.5,1,0)
#Enfrentamos la predicción contra la realidad
table(maduracion$predic,maduracion$Maturation)
#Predecimos si un salmón madura o no para un peso de gónada de 4
Prob.mad <- data.frame(Gonad=4)
Prediccion_logis <- predict(mod_logit, Prob.mad, type = "response")
Prediccion_logis <- data.frame(Prediccion_logis)
colnames(Prediccion_logis) <- c("Probabilidad de maduración")
Prediccion_logis%>% kable()
if (Prediccion_logis >= 0.5) {
print("Madura")
}else{
print("No madura")
}
Prediccion_lm%>% kable()
if (Prediccion_lm >= 0.5) {
print("Madura")
}else{
print("No madura")
}
# Predicción con modelo lineal
maduracion$madurar_lm <- predict(mod_lineal,maduracion,type="response")
#Determinamos  que el salmón madura cuando haya una probabilidad de maduración superior al 50%
maduracion$predic <- ifelse(maduracion$madurar_lm > 0.5,1,0)
#Predecimos si un salmón madura o no para un peso de gónada de 4
Prob.mad_lm <- data.frame(Gonad=4)
Prediccion_lm <- predict(mod_lineal, Prob.mad_lm, type = "response")
Prediccion_lm <- data.frame(Prediccion_lm)
colnames(Prediccion_lm) <- c("Probabilidad de maduración")
Prediccion_lm%>% kable()
if (Prediccion_lm >= 0.5) {
print("Madura")
}else{
print("No madura")
}
maduracion$madurar <- predict(mod_logit,maduracion,type="response")
maduracion$predic <- ifelse(maduracion$madurar > 0.5,1,0)
#Predecimos si un salmón madura o no para un peso de gónada de 4
Prob.mad <- data.frame(Gonad=4)
Prediccion_logis <- predict(mod_logit, Prob.mad, type = "response")
Prediccion_logis <- data.frame(Prediccion_logis)
colnames(Prediccion_logis) <- c("Probabilidad de maduración")
mod_logit <- glm(Maturation ~ Gonad,
family= binomial, data = maduracion)
summary(mod_logit)$coef %>% kable()
mod_logit <- glm(Maturation ~ Gonad,
family= binomial, data = maduracion)
summary(mod_logit)$coef %>% kable()
table(maduracion$Genotype, maduracion$Maturation)
table(maduracion$Genotype, maduracion$Maturation)  %>% kable()
table(maduracion$Maturation, maduracion$Genotype)  %>% kable()
mod_logit_mult <- glm(Maturation ~ Gonad +
Genotype,family= binomial,
data = maduracion)
summary(mod_logit_mult)$coef %>% kable()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(multcomp)
library(psych)
library(car)
library(readr)
library(lmtest)
library(boot)
Heart_data <- read_excel("Heart_attack_dataset.xlsx")
summary(Heart_data)
modelo1 <- glm(TenYearCHD ~ age,
family= binomial, data = Salmon_maturation_data)
modelo1 <- glm(TenYearCHD ~ age,
family= binomial, data = Heart_data)
summary(modelo1)
Heart_data <- read_excel("Heart_attack_dataset.xlsx")
summary(Heart_data)
head(Heart_data)
ggplot(data = Heart_data, aes(x = ge, y = TenYearCHD)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw() +
labs(title = "Regresión logística", x="Talla (cm)",
y = "Probabilidad de ataque al corazón")
ggplot(data = Heart_data, aes(x = age, y = TenYearCHD)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw() +
labs(title = "Regresión logística", x="Talla (cm)",
y = "Probabilidad de ataque al corazón")
ggplot(data = Heart_data, aes(x = age, y = TenYearCHD)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")) +
theme_bw() +
labs(title = "Regresión logística", x="Edad",
y = "Probabilidad de ataque al corazón")
modelo2 <- glm(TenYearCHD ~ age + male,
family= binomial, data = Salmon_maturation_data)
modelo2 <- glm(TenYearCHD ~ age + male,
family= binomial, data = Heart_data)
summary(modelo2)
AIC(modelo1,modelo2)
anova(modelo1,modelo2,test ='Chisq')
